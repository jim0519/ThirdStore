@model JobItemListViewModel
@{
    ViewBag.Title = "Job Item List";
    Layout = "~/Views/Shared/CommonList.cshtml";
}



@using (Html.BeginForm())
{
    if (Model.ShowSyncInventory)
    {
        <table width="100%">
            <tr>
                <td>
                    @Html.LabelFor(model => model.AffectTimeFrom):
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.AffectTimeFrom)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.AffectTimeTo):
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.AffectTimeTo)
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <input type="button" id="btnSyncInventory" class="k-button" value="Sync Inventory" />
                    <img id="imgLoading" src="~/Content/images/loading.gif" style="display:none;" />
                    <script>
                        $(document).ready(function () {
                            $("#btnSyncInventory").click(function (e) {
                                if ($('#@Html.FieldIdFor(model => model.AffectTimeFrom)').val() == "" || $('#@Html.FieldIdFor(model => model.AffectTimeTo)').val() == "") {
                                    alert("Please input From Date and To Date.");
                                    return false;
                                }

                                var link = "@Html.Raw(Url.Action("SyncInventory", "JobItem"))"
                                var postData = {
                                    AffectTimeFrom: $('#@Html.FieldIdFor(model => model.AffectTimeFrom)').val(),
                                    AffectTimeTo: $('#@Html.FieldIdFor(model => model.AffectTimeTo)').val()
                                }
                                //debugger;
                                $.ajax({
                                    url: link,
                                    type: "POST",
                                    //contentType: "application/json; charset=utf-8",
                                    data: postData,
                                    dataType: "json",
                                    beforeSend: function () {
                                        $("#imgLoading").show();
                                    },
                                    complete: function () {
                                        $("#imgLoading").hide();
                                    },
                                    success: function (data) {
                                        if (data.Result) {
                                            alert("Sync Inventory Finished");
                                        }
                                        else {
                                            if (data.Message != "")
                                                alert(data.Message);
                                            else
                                                alert("Unknown error occurred.");
                                        }
                                    },
                                    error: function (data) {
                                        //debugger;
                                        alert("error");
                                    }
                                });
                                return false;
                            });
                            
                        });

                    </script>
                </td>
            </tr>
        </table>
    }
    <div style="border-bottom: 1px dotted #998675;margin-top: 30px;margin-bottom: 10px;height: 35px;">
        <div style="float:left; font-size:x-large;color:brown;">Search Criteria</div>
        <div id="divOperationBtn" style="float:right">
            @*<input type="button" id="btnImportData" class="k-button" value="Import Data" />*@
            @if (Model.ShowSyncInventory)
            {
                <img id="imgLoadingJobItem" src="~/Content/images/loading.gif" style="display:none;" />
                @*<input type="button" id="btnUpdateDSZ" class="k-button" value="Update DSZ Data and Sync" />*@
                <input type="button" id="btnSyncByJobItem" class="k-button" value="Sync Inventory" />
            }
            <input type="button" id="btnPrintLabel" class="k-button" value="Print Label" />
            <input type="button" id="btnDuplicate" class="k-button" value="Duplicate" />
            <input type="button" id="btnEdit" class="k-button" value="Edit" />
            <input type="button" id="btnCreateNew" class="k-button" value="Create New Item" />
            <script>
                $(document).ready(function () {

                    $('#btnImportData').click(function () {
                        var link="@Html.Raw(Url.Action("ImportData", "JobItem"))"

                        $.ajax({
                            url: link,
                            type: "POST",
                            dataType: "json",
                            beforeSend: function () {
                                $("#imgLoading").show();
                            },
                            complete: function () {
                                $("#imgLoading").hide();
                            },
                            success: function (data) {
                                if (data.Result) {
                                    alert("Import Data Success");
                                }
                                else {
                                    //debugger;
                                    if (data.Message != "")
                                        alert(data.Message);
                                    else
                                        alert("Unknown error occurred.");
                                }
                            },
                            error: function (data) {
                                //debugger;

                                alert("error");
                            }
                        });
                        return false;
                    });

                    $('#btnUpdateDSZ').click(function () {
                        var link="@Html.Raw(Url.Action("UpdateDSZandSync", "JobItem"))"

                        $.ajax({
                            url: link,
                            type: "POST",
                            dataType: "json",
                            beforeSend: function () {
                                $("#imgLoading").show();
                            },
                            complete: function () {
                                $("#imgLoading").hide();
                            },
                            success: function (data) {
                                if (data.Result) {
                                    alert("Update DSZ Success");
                                }
                                else {
                                    //debugger;
                                    if (data.Message != "")
                                        alert(data.Message);
                                    else
                                        alert("Unknown error occurred.");
                                }
                            },
                            error: function (data) {
                                //debugger;

                                alert("error");
                            }
                        });
                        return false;
                    });

                    $('#btnSyncByJobItem').click(function () {
                        //debugger;
                        if (selectedIds.length == 0) {
                            alert("Please select more than one job item to sync");
                            return false;
                        }

                        if (selectedIds.length > 0) {
                            //e.preventDefault();
                            var ids = selectedIds.join(",");
                            var postData = {
                                selectedIDs: ids
                            };
                            var link = '@Url.Action("SyncByJobItem", "JobItem")';
                            $.ajax({
                                url: link,
                                type: "POST",
                                //contentType: "application/json; charset=utf-8",
                                data: postData,
                                dataType: "json",
                                beforeSend: function () {
                                    $("#imgLoadingJobItem").show();
                                },
                                complete: function () {
                                    $("#imgLoadingJobItem").hide();
                                },
                                success: function (data) {
                                    if (data.Result) {
                                        alert("Sync Inventory Finished");
                                    }
                                    else {
                                        if (data.Message != "")
                                            alert(data.Message);
                                        else
                                            alert("Unknown error occurred.");
                                    }
                                },
                                error: function (data) {
                                    //debugger;
                                    alert("error");
                                }
                            });
                        }

                        return false;
                    });

                    $('#btnDuplicate').click(function () {

                        if (selectedIds.length != 1) {
                            alert("Please select one job item to duplicate.");
                            return false;
                        }

                        var selectedJobItemID = selectedIds[0];
                        var link = '@Html.Raw(Url.Action("Create", "JobItem", new { FromJobItemID = "_selectedJobItemID_" }))'.replace('_selectedJobItemID_', selectedJobItemID);
                        location.href = link;
                    });

                    $('#btnCreateNew').click(function () {

                        var link="@Html.Raw(Url.Action("Create", "JobItem"))"
                        location.href = link;
                    });

                    $('#btnEdit').click(function (e) {
                        //debugger;

                        if (selectedIds.length == 0) {
                            alert("Please select more than one job item to edit");
                            return false;
                        }

                        e.preventDefault();
                        var ids = selectedIds.join(",");
                        //debugger;
                        $('#bulk-update-jobitem-form #jobItemIdsBulkUpdate').val(ids);
                        var window = $("#bulkUpdateJobItem-window");
                        if (!window.data("kendoWindow")) {
                            window.kendoWindow({
                                modal: true,
                                width: "400px",
                                title: "Bulk Update Job Item",
                                actions: ["Close"]
                            });
                        }
                        window.data('kendoWindow').center().open();
                        return;
                    });

                    $('#btnPrintLabel').click(function () {

                        //debugger;
                        if (selectedIds.length == 0) {
                            alert("Please select more than one job item to print");
                            return false;
                        }

                        if (selectedIds.length > 0) {
                            var link = '@Url.Action("PrintLabel", "JobItem")';
                            var ids = selectedIds.join(",");
                            var postData = {
                                selectedIDs: ids
                            };
                            //debugger;
                            $.ajax({
                                url: link,
                                type: "POST",
                                data: postData,
                                dataType: "json",
                                success: function (data) {
                                    if (data.Result) {
                                        alert("Print Label Success");
                                    }
                                    else {
                                        //debugger;
                                        if (data.Message != "")
                                            alert(data.Message);
                                        else
                                            alert("Unknown error occurred.");
                                    }
                                },
                                error: function (data) {
                                    //debugger;

                                    alert("error");
                                }
                            });
                        }
                        return false;
                    });

                    @*$('#btnShipOut').click(function () {
                        var link="@Html.Raw(Url.Action("ShipOut", "JobItem"))"
                        location.href = link;
                    });*@


                });
            </script>
        </div>
    </div>

    <table width="100%">
        <tr>
            <td>
                @Html.LabelFor(model => model.SearchID):
            </td>
            <td>
                @Html.EditorFor(model => model.SearchID)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.SearchReference):
            </td>
            <td>
                @Html.EditorFor(model => model.SearchReference)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.SearchSKU):
            </td>
            <td>
                @Html.EditorFor(model => model.SearchSKU)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.CreateTimeFrom):
            </td>
            <td>
                @Html.EditorFor(model => model.CreateTimeFrom)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.CreateTimeTo):
            </td>
            <td>
                @Html.EditorFor(model => model.CreateTimeTo)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.SearchLocation):
            </td>
            <td>
                @Html.EditorFor(model => model.SearchLocation)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.SearchInspector):
            </td>
            <td>
                @Html.EditorFor(model => model.SearchInspector, new { SelectList = Model.InspectorList })
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.SearchType):
            </td>
            <td>
                @Html.DropDownListFor(model => model.SearchType, Model.JobItemTypes)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.SearchStatus):
            </td>
            <td>
                @Html.DropDownListFor(model => model.SearchStatus, Model.JobItemStatuses)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.SearchSupplier):
            </td>
            <td>
                @Html.DropDownListFor(model => model.SearchSupplier, Model.Suppliers)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.SearchCondition):
            </td>
            <td>
                @Html.DropDownListFor(model => model.SearchCondition, Model.JobItemConditions)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.SearchTrackingNumber):
            </td>
            <td>
                @Html.EditorFor(model => model.SearchTrackingNumber)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.HasStocktakeTime):
            </td>
            <td>
                @Html.DropDownListFor(model => model.HasStocktakeTime, Model.YesOrNo)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="button" id="btnSearch" class="k-button" value="Search" />
                <input type="button" id="btnClearAll" class="k-button" value="Clear All" />
            </td>
        </tr>
    </table>

    <table class="adminContent">
        <tr>
            <td>
                <div id="jobItem-grid"></div>
                <script>
                    $(document).ready(function () {
                        var skusTemplate = "#if(SKUs!=''&&SKUs!=null&&SKUs!=undefined ){var skuInfos=SKUs.split(';'); for(var i = 0; i < skuInfos.length; i = i+1){var skuInfo=skuInfos[i].split(','); var sku=skuInfo[0]; var itemId=skuInfo[1];  # <a href='@Url.Action("Edit","Item")?ItemID=#=itemId#' target='_blank'>#=sku#</a><br /> #} }#";
                        $("#jobItem-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("List", "JobItem"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: additionalData
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },
                                error: function (e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: "100",
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                pageSizes: ["100", "200", "500"]
                            },
                            editable: {
                                confirmation: false,
                                mode: "inline"
                            },
                            scrollable: false,
                            dataBound: onDataBound,
                            columns: [
                                {
                                    field: "ID",
                                    headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: "<input type='checkbox' value='#=ID#' class='checkboxGroups'/>",
                                    width: 50
                                }, {
                                    field: "ID",
                                    template: "<a href='@Url.Action("Edit")?JobItemID=#=ID#' target='_blank' > #=ID#</a>",
                                    title: "ID"
                                }, {
                                    field: "Status",
                                    title: "Status"
                                }, {
                                    field: "Reference",
                                    title: "Reference"
                                }, {
                                    field: "Location",
                                    title: "Location"
                                }, {
                                    field: "Condition",
                                    title: "Condition"
                                }, {
                                    field: "SKUs",
                                    template: skusTemplate,
                                    title: "SKU Details"
                                }, {
                                    field: "Ref2",
                                    title: "Inspectors"
                                }, {
                                    field: "ItemPrice",
                                    title: "Price"
                                }, {
                                    field: "ShipTime",
                                    title: "Ship Time",
                                    type: "date",
                                    format: "{0:dd/MM/yyyy HH:mm:ss}"
                                }, {
                                    field: "StocktakeTime",
                                    title: "Stocktake Time",
                                    type: "date",
                                    format: "{0:dd/MM/yyyy HH:mm:ss}"
                                }, {
                                    field: "TrackingNumber",
                                    title: "Tracking Number"
                                },{
                                    field: "ItemDetail",
                                    title: "Item Detail"
                                }
                            ]
                        });
                    });

                    
                </script>

            </td>
        </tr>
    </table>

    <script>
    var selectedIds = [];
    $(document).ready(function () {

        //clear all button
        $('#btnClearAll').click(function () {
            $('#@Html.FieldIdFor(model => model.SearchID)').val("");
            $('#@Html.FieldIdFor(model => model.SearchSKU)').val("");
            $('#@Html.FieldIdFor(model => model.SearchReference)').val("");
            $('#@Html.FieldIdFor(model => model.CreateTimeFrom)').val("");
            $('#@Html.FieldIdFor(model => model.CreateTimeTo)').val("");
            $('#@Html.FieldIdFor(model => model.SearchType)').val("0");
            $('#@Html.FieldIdFor(model => model.SearchCondition)').val("0");
            $('#@Html.FieldIdFor(model => model.SearchSupplier)').val("0");
            $('#@Html.FieldIdFor(model => model.SearchStatus)').val("0");
            $('#@Html.FieldIdFor(model => model.SearchLocation)').val("");
            //$('#@Html.FieldIdFor(model => model.SearchInspector)').val("");
            $('#@Html.FieldIdFor(model => model.SearchTrackingNumber)').val("");
            $('#@Html.FieldIdFor(model => model.HasStocktakeTime)').val("-1");
            var inspectorMultiselect = $('#@Html.FieldIdFor(model => model.SearchInspector)').data("kendoMultiSelect");
            inspectorMultiselect.value("");
            inspectorMultiselect.trigger("change");

            selectedIds = [];

            RefreshGrid(false);

            return false;
        });

    });
    function additionalData() {
        return {
            SearchID: $('#@Html.FieldIdFor(model => model.SearchID)').val(),
            SearchSKU: $('#@Html.FieldIdFor(model => model.SearchSKU)').val(),
            SearchReference: $('#@Html.FieldIdFor(model => model.SearchReference)').val(),
            CreateTimeFrom: $('#@Html.FieldIdFor(model => model.CreateTimeFrom)').val(),
            CreateTimeTo: $('#@Html.FieldIdFor(model => model.CreateTimeTo)').val(),
            SearchType: $('#@Html.FieldIdFor(model => model.SearchType)').val(),
            SearchCondition: $('#@Html.FieldIdFor(model => model.SearchCondition)').val(),
            SearchSupplier: $('#@Html.FieldIdFor(model => model.SearchSupplier)').val(),
            SearchStatus: $('#@Html.FieldIdFor(model => model.SearchStatus)').val(),
            SearchLocation: $('#@Html.FieldIdFor(model => model.SearchLocation)').val(),
            SearchInspector: $('#@Html.FieldIdFor(model => model.SearchInspector)').val(),
            SearchTrackingNumber: $('#@Html.FieldIdFor(model => model.SearchTrackingNumber)').val(),
            HasStocktakeTime: $('#@Html.FieldIdFor(model => model.HasStocktakeTime)').val()
        };
    }
    </script>

}


    <div id="bulkUpdateJobItem-window" style="display:none;">
        @using (Html.BeginForm("BulkUpdateJobItem", "JobItem", FormMethod.Post, new { id = "bulk-update-jobitem-form" }))
        {
            @Html.ValidationSummary()
            <input type="hidden" id="jobItemIdsBulkUpdate" name="jobItemIdsBulkUpdate" value="" />
            <table style="text-align:left;">
                <tr>
                    <td>
                        @Html.LabelFor(model => model.BulkUpdate.StatusID):
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.BulkUpdate.StatusID, Model.JobItemStatuses)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.BulkUpdate.Location):
                    </td>
                    <td>
                        @Html.EditorFor(model => model.BulkUpdate.Location)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.BulkUpdate.ItemPrice):
                    </td>
                    <td>
                        @Html.EditorFor(model => model.BulkUpdate.ItemPrice)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.BulkUpdate.PricePercentage):
                    </td>
                    <td>
                        @Html.EditorFor(model => model.BulkUpdate.PricePercentage)
                    </td>
                </tr>
                <tr>
                    <td>
                        <input type="submit" class="k-button" value="Submit" />
                    </td>
                </tr>
            </table>
        }
    </div>
